{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", {\n    ref: \"timer\"\n  }, _toDisplayString($options.calculateDate()), 513\n  /* TEXT, NEED_PATCH */\n  )]);\n}","map":{"version":3,"mappings":";;uBACIA,oBAEM,KAFN,EAEM,IAFN,EAEM,CADFC,oBAAwC,GAAxC,EAAwC;IAArCC,GAAG,EAAC;EAAiC,CAAxC,EAAcC,iBAAIC,wBAAJ,CAAd,EAA+B;EAAA;EAA/B,CACE,CAFN","names":["_createElementBlock","_createElementVNode","ref","_toDisplayString","$options"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/TimeClock.vue"],"sourcesContent":["<template>\n    <div>\n        <p ref=\"timer\">{{ calculateDate() }}</p>\n    </div>\n</template>\n\n<script>\nimport { setInterval } from 'timers/promises';\n\nexport default {\n    name: 'TimeClock',\n    data() {\n        return {\n            isMounted: false,\n            intervalPtr: {},\n            data: this.calculateDate()\n        }\n    },\n    methods: {\n        calculateDate() {\n            setInterval(() => {\n                const currentTime = new Date();\n                let hh = currentTime.getHours();\n                let mm = currentTime.getMinutes();\n                let ss = currentTime.getSeconds();\n                hh = hh < 10 ? `0${hh}` : hh;\n                mm = mm < 10 ? `0${mm}` : mm;\n                ss = ss < 10 ? `0${ss}` : ss;\n                return `${hh}:${mm}:${ss}`;\n            }, 1000)\n        },\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    position: fixed;\n    margin: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module"}