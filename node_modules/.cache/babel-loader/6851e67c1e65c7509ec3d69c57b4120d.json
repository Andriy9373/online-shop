{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-01d360c3\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Catalog!\", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = {\n  class: \"catalog\"\n};\nconst _hoisted_3 = {\n  class: \"products\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"total\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CustomSelect = _resolveComponent(\"CustomSelect\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_CustomSelect, {\n    options: $data.options,\n    selected: $data.selected,\n    onSelectedCategory: $options.selectedCategory\n  }, null, 8\n  /* PROPS */\n  , [\"options\", \"selected\", \"onSelectedCategory\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sortedProducts, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"catalog-item\",\n      key: index\n    }, [_createElementVNode(\"img\", {\n      src: require('@/assets/images/' + item.image),\n      alt: \"product\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_4), _createElementVNode(\"h2\", null, _toDisplayString(item.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(item.article), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(item.price), 1\n    /* TEXT */\n    ), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.$emit('addToCart', item)\n    }, _toDisplayString($data.labels.add_to_cart), 9\n    /* TEXT, PROPS */\n    , _hoisted_5)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", null, \"Total: \" + _toDisplayString(this.getTotalPrice) + \" UAH\", 1\n  /* TEXT */\n  )])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gEACIA,oBAAiB,IAAjB,EAAiB,IAAjB,EAAI,UAAJ,EAAY;AAAA;AAAZ;;;EAMKC,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;;;EAeNA,KAAK,EAAC;;;;;6DAtBfC,YACAC,aAIEC,uBAJF,EAIE;IAHGC,OAAO,EAAEC,aAGZ;IAFGC,QAAQ,EAAED,cAEb;IADGE,kBAAiB,EAAEC;EACtB,CAJF;;EAAA,kDAKAT,oBAmBM,KAnBN,cAmBM,CAlBFA,oBAcM,KAdN,cAcM,oBAbFU,oBAYMC,SAZN,EAYM,IAZN,EAYMC,YAVsBH,uBAUtB,EAVoC,CAA9BI,IAA8B,EAAxBC,KAAwB,KAAnB;yBAFvBJ,oBAYM,KAZN,EAYM;MAXFT,KAAK,EAAC,cAWJ;MATDc,GAAG,EAACD;IASH,CAZN,GAKId,oBAAoE,KAApE,EAAoE;MAA9DgB,GAAG,EAAEC,OAAO,sBAAsBJ,IAAI,CAACK,KAA3B,CAAkD;MAAfC,GAAG,EAAC;IAAW,CAApE;;IAAA,eACAnB,oBAAwB,IAAxB,EAAwB,IAAxB,EAAwBoB,iBAAjBP,IAAI,CAACQ,IAAY,CAAxB,EAAgB;IAAA;IAAhB,GACArB,oBAAyB,GAAzB,EAAyB,IAAzB,EAAyBoB,iBAAnBP,IAAI,CAACS,OAAc,CAAzB,EAAkB;IAAA;IAAlB,GACAtB,oBAAuB,GAAvB,EAAuB,IAAvB,EAAuBoB,iBAAjBP,IAAI,CAACU,KAAY,CAAvB,EAAgB;IAAA;IAAhB,GACAvB,oBAES,QAFT,EAES;MAFAwB,OAAK,YAAEC,WAAK,WAAL,EAAmBZ,IAAnB;IAEP,CAFT,mBACOP,aAAOoB,YADd,EACyB;IAAA;IADzB,EACyBC,UADzB,EATJ;GAYM,CAZN;;EAAA,CAaE,EAdN,CAkBE,EAHF3B,oBAEM,KAFN,cAEM,CADFA,oBAA0C,GAA1C,EAA0C,IAA1C,EAAG,YAAOoB,sBAAQQ,aAAR,CAAP,GAA+B,MAAlC,EAAsC;EAAA;EAAtC,CACE,CAFN,CAGE,CAnBN","names":["_createElementVNode","class","_hoisted_1","_createVNode","_component_CustomSelect","options","$data","selected","onSelectedCategory","$options","_createElementBlock","_Fragment","_renderList","item","index","key","src","require","image","alt","_toDisplayString","name","article","price","onClick","_ctx","add_to_cart","_hoisted_5","getTotalPrice"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/ShopCatalog.vue"],"sourcesContent":["<template>\n    <h1>Catalog!</h1>\n    <CustomSelect\n        :options=\"options\"\n        :selected=\"selected\"\n        @selected-category=\"selectedCategory\"\n    />\n    <div class=\"catalog\">\n        <div class=\"products\">\n            <div\n                class=\"catalog-item\"\n                v-for=\"(item, index) in sortedProducts\"\n                :key=index\n            >\n                <img :src=\"require('@/assets/images/' + item.image)\" alt=\"product\"/>\n                <h2>{{ item.name }}</h2>\n                <p>{{ item.article }}</p>\n                <p>{{ item.price }}</p>\n                <button @click=\"$emit('addToCart', item)\">\n                    {{ labels.add_to_cart }}\n                </button>\n            </div>\n        </div>\n        <div class=\"total\">\n            <p>Total: {{ this.getTotalPrice }} UAH</p>\n        </div>\n    </div>\n</template>\n\n<script>\nimport CustomSelect from '@/components/CustomSelect';\nimport { mapState, mapGetters, mapActions } from 'vuex';\n\nexport default {\n    name: 'ShopCatalog',\n    components: {\n        CustomSelect\n    },\n    props: {},\n    data() {\n        return {\n            options: [\n                {name: 'Male', value: 'Male'},\n                {name: 'Female', value: 'Female'},\n                {name: 'All', value: 'All'},\n            ],\n            selected: 'All',\n            labels: {\n                add_to_cart: 'Add to cart'\n            }\n        }\n    },\n    computed: {\n        ...mapState({\n            products: 'products',\n            cart: 'cart',\n        }),\n        ...mapGetters({\n            getTotalPrice: 'getTotalPrice'\n        }),\n        sortedProducts() {\n            console.log(this.selected)\n            if (this.selected.name === 'Male') {\n                const male = this.products.filter(product => {\n                    product.category === 'Male'\n                })\n                console.log('zzzzzzzzzzzzzzzzzz', male)\n                return male;\n            }\n            return this.products\n        }\n    },\n    methods: {\n        ...mapActions({\n            getProducts: 'getProducts',\n        }),\n        selectedCategory(selected) {\n            this.selected = selected\n        },\n    },\n    mounted() {\n        // console.log(this.$route.name)\n        this.getProducts();\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.catalog {\n    .products {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        flex-wrap: wrap;\n\n        .catalog-item {\n            // background-color: $background-color;\n            background-color: orange;\n            flex-basis: 25%;\n            // box-shadow: $box-shadow;\n            margin: 8px;\n            padding: 8px;\n            img {\n                height: 200px;\n            }\n        }\n    }\n\n    .total {\n        position: fixed;\n        background-color: green;\n        color: #ffffff;\n        padding: 10px;\n        top: 0;\n        right: 0;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}