{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString($data.interval), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;uBACIA,oBAEM,KAFN,EAEM,IAFN,EAEM,CADFC,oBAAqB,GAArB,EAAqB,IAArB,EAAqBC,iBAAfC,cAAe,CAArB,EAAc;EAAA;EAAd,CACE,CAFN","names":["_createElementBlock","_createElementVNode","_toDisplayString","$data"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/TimeClock.vue"],"sourcesContent":["<template>\n    <div>\n        <p>{{ interval }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      interval: null,\n      time: null\n    }\n  },\n  beforeDestroy() {\n    // prevent memory leak\n    clearInterval(this.interval)\n  },\n  created() {\n    // update the time every second\n    this.interval = setInterval(() => {\n      // Concise way to format time according to system locale.\n      // In my case this returns \"3:48:00 am\"\n      this.time = Intl.DateTimeFormat(navigator.language, {\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric'\n      }).format()\n    }, 1000)\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    position: fixed;\n    margin: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module"}