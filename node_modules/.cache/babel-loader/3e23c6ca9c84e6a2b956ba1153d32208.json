{"ast":null,"code":"export default {\n  name: 'TimeClock',\n\n  data() {\n    return {\n      isMounted: false,\n      intervalPtr: {},\n      labels: {\n        now: this.calculateTime\n      }\n    };\n  },\n\n  calculateDate() {\n    let today = new Date();\n    const yyyy = today.getFullYear();\n    let mm = today.getMonth() + 1; // Months start at 0!\n\n    let dd = today.getDate();\n    let hours = today.getHours();\n    let minutes = today.getMinutes();\n    let seconds = today.getSeconds();\n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n    if (minutes < 10) minutes = '0' + minutes;\n    if (seconds < 10) seconds = '0' + seconds;\n    today = `${dd}.${mm}.${yyyy} ${hours}:${minutes}:${seconds}`;\n    return today;\n  },\n\n  dynamicallyCalculateDate() {\n    this.intervalId = setInterval(() => {\n      this.labels.now = this.calculateDate();\n    }, 1000);\n  }\n\n};","map":{"version":3,"mappings":"AAOA,eAAe;EACXA,IAAI,EAAE,WADK;;EAEXC,IAAI,GAAG;IACH,OAAO;MACHC,SAAS,EAAE,KADR;MAEHC,WAAW,EAAE,EAFV;MAGHC,MAAM,EAAE;QACJC,GAAG,EAAE,KAAKC;MADN;IAHL,CAAP;EAOH,CAVU;;EAWXC,aAAa,GAAG;IACR,IAAIC,KAAI,GAAI,IAAIC,IAAJ,EAAZ;IACA,MAAMC,IAAG,GAAIF,KAAK,CAACG,WAAN,EAAb;IACA,IAAIC,EAAC,GAAIJ,KAAK,CAACK,QAAN,KAAmB,CAA5B,CAHQ,CAGuB;;IAC/B,IAAIC,EAAC,GAAIN,KAAK,CAACO,OAAN,EAAT;IACA,IAAIC,KAAI,GAAIR,KAAK,CAACS,QAAN,EAAZ;IACA,IAAIC,OAAM,GAAIV,KAAK,CAACW,UAAN,EAAd;IACA,IAAIC,OAAM,GAAIZ,KAAK,CAACa,UAAN,EAAd;IAEA,IAAIP,EAAC,GAAI,EAAT,EAAaA,EAAC,GAAI,MAAMA,EAAX;IACb,IAAIF,EAAC,GAAI,EAAT,EAAaA,EAAC,GAAI,MAAMA,EAAX;IACb,IAAIM,OAAM,GAAI,EAAd,EAAkBA,OAAM,GAAI,MAAMA,OAAhB;IAClB,IAAIE,OAAM,GAAI,EAAd,EAAkBA,OAAM,GAAI,MAAMA,OAAhB;IAElBZ,KAAI,GAAK,GAAEM,EAAG,IAAGF,EAAG,IAAGF,IAAI,IAAIM,KAAM,IAAGE,OAAQ,IAAGE,OAAQ,EAA3D;IACA,OAAOZ,KAAP;EACH,CA3BM;;EA4BPc,wBAAwB,GAAG;IACvB,KAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;MAChC,KAAKpB,MAAL,CAAYC,GAAZ,GAAkB,KAAKE,aAAL,EAAlB;IACH,CAF4B,EAE1B,IAF0B,CAA7B;EAGJ;;AAhCO,CAAf","names":["name","data","isMounted","intervalPtr","labels","now","calculateTime","calculateDate","today","Date","yyyy","getFullYear","mm","getMonth","dd","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","dynamicallyCalculateDate","intervalId","setInterval"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/TimeClock.vue"],"sourcesContent":["<template>\n    <div>\n        <p ref=\"timer\">{{ calculateDate() }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'TimeClock',\n    data() {\n        return {\n            isMounted: false,\n            intervalPtr: {},\n            labels: {\n                now: this.calculateTime\n            }\n        }\n    },\n    calculateDate() {\n            let today = new Date();\n            const yyyy = today.getFullYear();\n            let mm = today.getMonth() + 1; // Months start at 0!\n            let dd = today.getDate();\n            let hours = today.getHours();\n            let minutes = today.getMinutes();\n            let seconds = today.getSeconds();\n\n            if (dd < 10) dd = '0' + dd;\n            if (mm < 10) mm = '0' + mm;\n            if (minutes < 10) minutes = '0' + minutes;\n            if (seconds < 10) seconds = '0' + seconds;\n\n            today = `${dd}.${mm}.${yyyy} ${hours}:${minutes}:${seconds}`;\n            return today;\n        },\n        dynamicallyCalculateDate() {\n            this.intervalId = setInterval(() => {\n                this.labels.now = this.calculateDate();\n            }, 1000);\n        }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    position: fixed;\n    margin: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module"}