{"ast":null,"code":"export default {\n  name: 'TimeClock',\n\n  data() {\n    return {};\n  },\n\n  computed: {\n    // calculateTime() {\n    //     const currentTime = new Date();\n    //     let hh = currentTime.getHours();\n    //     let mm = currentTime.getMinutes();\n    //     let ss = currentTime.getSeconds();\n    //     hh = hh < 10 ? `0${hh}` : hh;\n    //     mm = mm < 10 ? `0${mm}` : mm;\n    //     ss = ss < 10 ? `0${ss}` : ss;\n    //     // time.innerHTML = `${hh}:${mm}:${ss}`\n    //     return `${hh}:${mm}:${ss}`\n    // },\n    calculateTime() {\n      const currentTime = new Date();\n      console.log(this.$refs.p.timer);\n      return currentTime; // if (this.intervalPtr[location]) clearInterval(this.intervalPtr[location]);\n      // const calcTime = () => {\n      // \tthis.$refs[location][0].innerText = moment.tz(location).format(format);\n      // }\n      // this.intervalPtr[location] = setInterval(calcTime, 1000);\n      // return moment.tz(location).format(format);\n    } // dynamicDate() {\n    //     setInterval(() => {\n    //         this.calculateTime();\n    //     }, 1000)\n    // }\n\n\n  }\n};","map":{"version":3,"mappings":"AAOA,eAAe;EACXA,IAAI,EAAE,WADK;;EAEXC,IAAI,GAAG;IACH,OAAO,EAAP;EAGH,CANU;;EAOXC,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,aAAa,GAAG;MACrB,MAAMC,WAAU,GAAI,IAAIC,IAAJ,EAApB;MACSC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,CAAX,CAAaC,KAAzB;MACA,OAAON,WAAP,CAHY,CAIrB;MACA;MACA;MACA;MACA;MACA;IACA,CAtBW,CAuBN;IACA;IACA;IACA;IACA;;;EA3BM;AAPC,CAAf","names":["name","data","computed","calculateTime","currentTime","Date","console","log","$refs","p","timer"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/TimeClock.vue"],"sourcesContent":["<template>\n    <div>\n        <p ref=\"timer\">{{ calculateTime }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'TimeClock',\n    data() {\n        return {\n\n        }\n    },\n    computed: {\n        // calculateTime() {\n        //     const currentTime = new Date();\n        //     let hh = currentTime.getHours();\n        //     let mm = currentTime.getMinutes();\n        //     let ss = currentTime.getSeconds();\n        //     hh = hh < 10 ? `0${hh}` : hh;\n        //     mm = mm < 10 ? `0${mm}` : mm;\n        //     ss = ss < 10 ? `0${ss}` : ss;\n        //     // time.innerHTML = `${hh}:${mm}:${ss}`\n        //     return `${hh}:${mm}:${ss}`\n        // },\n        calculateTime() {\n\t\t\tconst currentTime = new Date();\n            console.log(this.$refs.p.timer)\n            return currentTime;\n\t\t\t// if (this.intervalPtr[location]) clearInterval(this.intervalPtr[location]);\n\t\t\t// const calcTime = () => {\n\t\t\t// \tthis.$refs[location][0].innerText = moment.tz(location).format(format);\n\t\t\t// }\n\t\t\t// this.intervalPtr[location] = setInterval(calcTime, 1000);\n\t\t\t// return moment.tz(location).format(format);\n\t\t},\n        // dynamicDate() {\n        //     setInterval(() => {\n        //         this.calculateTime();\n        //     }, 1000)\n        // }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    position: fixed;\n    margin: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module"}