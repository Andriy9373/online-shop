{"ast":null,"code":"export default {\n  name: 'TimeClock',\n\n  data() {\n    return {\n      isMounted: false,\n      intervalPtr: {},\n      data: this.calculateDate()\n    };\n  },\n\n  methods: {\n    calculateDate() {\n      let today = new Date();\n      const yyyy = today.getFullYear();\n      let mm = today.getMonth() + 1; // Months start at 0!\n\n      let dd = today.getDate();\n      let hours = today.getHours();\n      let minutes = today.getMinutes();\n      let seconds = today.getSeconds();\n      if (dd < 10) dd = '0' + dd;\n      if (mm < 10) mm = '0' + mm;\n      if (minutes < 10) minutes = '0' + minutes;\n      if (seconds < 10) seconds = '0' + seconds;\n      today = `${dd}.${mm}.${yyyy} ${hours}:${minutes}:${seconds}`;\n      return today;\n    },\n\n    dynamicallyCalculateDate() {\n      this.intervalId = setInterval(() => {\n        this.date = this.calculateDate();\n      }, 1000);\n    }\n\n  },\n\n  mounted() {\n    this.dynamicallyCalculateDate();\n  }\n\n};","map":{"version":3,"mappings":"AAOA,eAAe;EACXA,IAAI,EAAE,WADK;;EAEXC,IAAI,GAAG;IACH,OAAO;MACHC,SAAS,EAAE,KADR;MAEHC,WAAW,EAAE,EAFV;MAGHF,IAAI,EAAE,KAAKG,aAAL;IAHH,CAAP;EAKH,CARU;;EASXC,OAAO,EAAE;IACLD,aAAa,GAAG;MACZ,IAAIE,KAAI,GAAI,IAAIC,IAAJ,EAAZ;MACA,MAAMC,IAAG,GAAIF,KAAK,CAACG,WAAN,EAAb;MACA,IAAIC,EAAC,GAAIJ,KAAK,CAACK,QAAN,KAAmB,CAA5B,CAHY,CAGmB;;MAC/B,IAAIC,EAAC,GAAIN,KAAK,CAACO,OAAN,EAAT;MACA,IAAIC,KAAI,GAAIR,KAAK,CAACS,QAAN,EAAZ;MACA,IAAIC,OAAM,GAAIV,KAAK,CAACW,UAAN,EAAd;MACA,IAAIC,OAAM,GAAIZ,KAAK,CAACa,UAAN,EAAd;MAEA,IAAIP,EAAC,GAAI,EAAT,EAAaA,EAAC,GAAI,MAAMA,EAAX;MACb,IAAIF,EAAC,GAAI,EAAT,EAAaA,EAAC,GAAI,MAAMA,EAAX;MACb,IAAIM,OAAM,GAAI,EAAd,EAAkBA,OAAM,GAAI,MAAMA,OAAhB;MAClB,IAAIE,OAAM,GAAI,EAAd,EAAkBA,OAAM,GAAI,MAAMA,OAAhB;MAElBZ,KAAI,GAAK,GAAEM,EAAG,IAAGF,EAAG,IAAGF,IAAI,IAAIM,KAAM,IAAGE,OAAQ,IAAGE,OAAQ,EAA3D;MACA,OAAOZ,KAAP;IACH,CAjBI;;IAkBLc,wBAAwB,GAAG;MACvB,KAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;QAChC,KAAKC,IAAL,GAAY,KAAKnB,aAAL,EAAZ;MACH,CAF4B,EAE1B,IAF0B,CAA7B;IAGJ;;EAtBK,CATE;;EAiCXoB,OAAO,GAAG;IACN,KAAKJ,wBAAL;EACJ;;AAnCW,CAAf","names":["name","data","isMounted","intervalPtr","calculateDate","methods","today","Date","yyyy","getFullYear","mm","getMonth","dd","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","dynamicallyCalculateDate","intervalId","setInterval","date","mounted"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/TimeClock.vue"],"sourcesContent":["<template>\n    <div>\n        <p ref=\"timer\">{{ calculateDate() }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'TimeClock',\n    data() {\n        return {\n            isMounted: false,\n            intervalPtr: {},\n            data: this.calculateDate()\n        }\n    },\n    methods: {\n        calculateDate() {\n            let today = new Date();\n            const yyyy = today.getFullYear();\n            let mm = today.getMonth() + 1; // Months start at 0!\n            let dd = today.getDate();\n            let hours = today.getHours();\n            let minutes = today.getMinutes();\n            let seconds = today.getSeconds();\n\n            if (dd < 10) dd = '0' + dd;\n            if (mm < 10) mm = '0' + mm;\n            if (minutes < 10) minutes = '0' + minutes;\n            if (seconds < 10) seconds = '0' + seconds;\n\n            today = `${dd}.${mm}.${yyyy} ${hours}:${minutes}:${seconds}`;\n            return today;\n        },\n        dynamicallyCalculateDate() {\n            this.intervalId = setInterval(() => {\n                this.date = this.calculateDate();\n            }, 1000);\n        }\n    },\n    mounted() {\n        this.dynamicallyCalculateDate();\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    position: fixed;\n    margin: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module"}