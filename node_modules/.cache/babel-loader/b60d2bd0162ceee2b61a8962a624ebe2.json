{"ast":null,"code":"import { setInterval } from 'timers/promises';\nexport default {\n  name: 'TimeClock',\n\n  data() {\n    return {};\n  },\n\n  computed: {\n    calculateTime() {\n      const currentTime = new Date();\n      let hh = currentTime.getHours();\n      let mm = currentTime.getMinutes();\n      let ss = currentTime.getSeconds();\n      hh = hh < 10 ? `0${hh}` : hh;\n      mm = mm < 10 ? `0${mm}` : mm;\n      ss = ss < 10 ? `0${ss}` : ss; // time.innerHTML = `${hh}:${mm}:${ss}`\n\n      return `${hh}:${mm}:${ss}`;\n    },\n\n    calculateTime(location, format) {\n      const moment = require('moment-timezone');\n\n      if (this.intervalPtr[location]) clearInterval(this.intervalPtr[location]);\n\n      const calcTime = () => {\n        this.$refs[location][0].innerText = moment.tz(location).format(format);\n      };\n\n      this.intervalPtr[location] = setInterval(calcTime, 1000);\n      return moment.tz(location).format(format);\n    },\n\n    dynamicDate() {\n      setInterval(() => {\n        this.calculateTime();\n      }, 1000);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAOA,SAASA,WAAT,QAA4B,iBAA5B;AAEA,eAAe;EACXC,IAAI,EAAE,WADK;;EAEXC,IAAI,GAAG;IACH,OAAO,EAAP;EAGH,CANU;;EAOXC,QAAQ,EAAE;IACNC,aAAa,GAAG;MACZ,MAAMC,WAAU,GAAI,IAAIC,IAAJ,EAApB;MACA,IAAIC,EAAC,GAAIF,WAAW,CAACG,QAAZ,EAAT;MACA,IAAIC,EAAC,GAAIJ,WAAW,CAACK,UAAZ,EAAT;MACA,IAAIC,EAAC,GAAIN,WAAW,CAACO,UAAZ,EAAT;MACAL,EAAC,GAAIA,EAAC,GAAI,EAAL,GAAW,IAAGA,EAAG,EAAjB,GAAqBA,EAA1B;MACAE,EAAC,GAAIA,EAAC,GAAI,EAAL,GAAW,IAAGA,EAAG,EAAjB,GAAqBA,EAA1B;MACAE,EAAC,GAAIA,EAAC,GAAI,EAAL,GAAW,IAAGA,EAAG,EAAjB,GAAqBA,EAA1B,CAPY,CAQZ;;MACA,OAAQ,GAAEJ,EAAG,IAAGE,EAAG,IAAGE,EAAG,EAAzB;IACH,CAXK;;IAYNP,aAAa,CAACS,QAAD,EAAWC,MAAX,EAAmB;MACrC,MAAMC,MAAK,GAAIC,OAAO,CAAC,iBAAD,CAAtB;;MACA,IAAI,KAAKC,WAAL,CAAiBJ,QAAjB,CAAJ,EAAgCK,aAAa,CAAC,KAAKD,WAAL,CAAiBJ,QAAjB,CAAD,CAAb;;MAChC,MAAMM,QAAO,GAAI,MAAM;QACtB,KAAKC,KAAL,CAAWP,QAAX,EAAqB,CAArB,EAAwBQ,SAAxB,GAAoCN,MAAM,CAACO,EAAP,CAAUT,QAAV,EAAoBC,MAApB,CAA2BA,MAA3B,CAApC;MACD,CAFA;;MAGA,KAAKG,WAAL,CAAiBJ,QAAjB,IAA6Bb,WAAW,CAACmB,QAAD,EAAW,IAAX,CAAxC;MACA,OAAOJ,MAAM,CAACO,EAAP,CAAUT,QAAV,EAAoBC,MAApB,CAA2BA,MAA3B,CAAP;IACA,CApBW;;IAqBNS,WAAW,GAAG;MACVvB,WAAW,CAAC,MAAM;QACd,KAAKI,aAAL;MACH,CAFU,EAER,IAFQ,CAAX;IAGJ;;EAzBM;AAPC,CAAf","names":["setInterval","name","data","computed","calculateTime","currentTime","Date","hh","getHours","mm","getMinutes","ss","getSeconds","location","format","moment","require","intervalPtr","clearInterval","calcTime","$refs","innerText","tz","dynamicDate"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/TimeClock.vue"],"sourcesContent":["<template>\n    <div>\n        <p ref=\"timer\">{{ calculateTime }}</p>\n    </div>\n</template>\n\n<script>\nimport { setInterval } from 'timers/promises';\n\nexport default {\n    name: 'TimeClock',\n    data() {\n        return {\n\n        }\n    },\n    computed: {\n        calculateTime() {\n            const currentTime = new Date();\n            let hh = currentTime.getHours();\n            let mm = currentTime.getMinutes();\n            let ss = currentTime.getSeconds();\n            hh = hh < 10 ? `0${hh}` : hh;\n            mm = mm < 10 ? `0${mm}` : mm;\n            ss = ss < 10 ? `0${ss}` : ss;\n            // time.innerHTML = `${hh}:${mm}:${ss}`\n            return `${hh}:${mm}:${ss}`\n        },\n        calculateTime(location, format) {\n\t\t\tconst moment = require('moment-timezone');\n\t\t\tif (this.intervalPtr[location]) clearInterval(this.intervalPtr[location]);\n\t\t\tconst calcTime = () => {\n\t\t\t\tthis.$refs[location][0].innerText = moment.tz(location).format(format);\n\t\t\t}\n\t\t\tthis.intervalPtr[location] = setInterval(calcTime, 1000);\n\t\t\treturn moment.tz(location).format(format);\n\t\t},\n        dynamicDate() {\n            setInterval(() => {\n                this.calculateTime();\n            }, 1000)\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    position: fixed;\n    margin: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module"}