{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", {\n    ref: \"timer\"\n  }, _toDisplayString($options.calculateDate()), 513\n  /* TEXT, NEED_PATCH */\n  )]);\n}","map":{"version":3,"mappings":";;uBACIA,oBAEM,KAFN,EAEM,IAFN,EAEM,CADFC,oBAAwC,GAAxC,EAAwC;IAArCC,GAAG,EAAC;EAAiC,CAAxC,EAAcC,iBAAIC,wBAAJ,CAAd,EAA+B;EAAA;EAA/B,CACE,CAFN","names":["_createElementBlock","_createElementVNode","ref","_toDisplayString","$options"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/TimeClock.vue"],"sourcesContent":["<template>\n    <div>\n        <p ref=\"timer\">{{ calculateDate() }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'TimeClock',\n    data() {\n        return {\n            isMounted: false,\n            intervalPtr: {},\n            data: this.calculateDate()\n        }\n    },\n    methods: {\n        calculateDate() {\n            const res = setInterval(() => {\n                let today = new Date();\n                const yyyy = today.getFullYear();\n                let mm = today.getMonth() + 1; // Months start at 0!\n                let dd = today.getDate();\n                let hours = today.getHours();\n                let minutes = today.getMinutes();\n                let seconds = today.getSeconds();\n\n                if (dd < 10) dd = '0' + dd;\n                if (mm < 10) mm = '0' + mm;\n                if (minutes < 10) minutes = '0' + minutes;\n                if (seconds < 10) seconds = '0' + seconds;\n\n                today = `${dd}.${mm}.${yyyy} ${hours}:${minutes}:${seconds}`;\n            }, 1000)\n            console.log(res)\n        },\n        dynamicallyCalculateDate() {\n            this.intervalId = setInterval(() => {\n                this.date = this.calculateDate();\n            }, 1000);\n        }\n    },\n    mounted() {\n        this.dynamicallyCalculateDate();\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    position: fixed;\n    margin: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module"}