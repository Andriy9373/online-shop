{"ast":null,"code":"// import CustomAlert from '@/components/Custom/CustomAlert';\nimport { mapState, mapActions } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'ShopCart',\n\n  // components: {\n  //     CustomAlert,\n  // },\n  data() {\n    return {\n      // isPopupOpen: false,\n      form: {\n        first_name: '',\n        last_name: '',\n        phone: '',\n        address: '',\n        discount_code: ''\n      },\n      labels: {\n        delete: 'Delete',\n        cart: 'Cart',\n        quantity: 'Quantity',\n        back_to_catalog: 'Back to catalog',\n        go_to_catalog: 'Go to catalog',\n        empty_cart: 'Empty cart',\n        first_name: 'First Name',\n        last_name: 'Last Name',\n        phone: 'Phone',\n        address: 'Address',\n        discount_code: 'Discount code'\n      }\n    };\n  },\n\n  props: {},\n  computed: { ...mapState({\n      cart: 'cart'\n    })\n  },\n  methods: { ...mapActions({\n      deleteProductFromCart: 'deleteProductFromCart',\n      incrementQuantity: 'incrementQuantity',\n      decrementQuantity: 'decrementQuantity'\n    }),\n\n    deleteProduct(index) {\n      this.deleteProductFromCart(index);\n    },\n\n    increment(index) {\n      this.incrementQuantity(index);\n    },\n\n    decrement(index) {\n      this.decrementQuantity(index);\n    },\n\n    async submit() {\n      if (this.form.first_name && this.form.last_name && this.form.phone && this.form.address) {\n        alert('success');\n        const order = {\n          first_name: this.form.first_name,\n          last_name: this.form.last_name,\n          phone: this.form.phone,\n          address: this.form.address,\n          products: this.cart\n        };\n        await axios.post('http://localhost:5000/api/orders', order);\n        this.form.first_name = '';\n        this.form.last_name = '';\n        this.form.phone = '';\n        this.form.address = '';\n        this.form.discount_code = '';\n      } else {\n        alert('error');\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8GA;AACA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,MAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACXC,IAAI,EAAE,UADK;;EAEX;EACA;EACA;EACAC,IAAI,GAAG;IACH,OAAO;MACH;MACAC,IAAI,EAAE;QACFC,UAAU,EAAE,EADV;QAEFC,SAAS,EAAE,EAFT;QAGFC,KAAK,EAAE,EAHL;QAIFC,OAAO,EAAE,EAJP;QAKFC,aAAa,EAAE;MALb,CAFH;MASHC,MAAM,EAAE;QACJC,MAAM,EAAE,QADJ;QAEJC,IAAI,EAAE,MAFF;QAGJC,QAAQ,EAAE,UAHN;QAIJC,eAAe,EAAE,iBAJb;QAKJC,aAAa,EAAE,eALX;QAMJC,UAAU,EAAE,YANR;QAOJX,UAAU,EAAE,YAPR;QAQJC,SAAS,EAAE,WARP;QASJC,KAAK,EAAE,OATH;QAUJC,OAAO,EAAE,SAVL;QAWJC,aAAa,EAAE;MAXX;IATL,CAAP;EAuBH,CA7BU;;EA8BXQ,KAAK,EAAE,EA9BI;EA+BXC,QAAQ,EAAE,EACN,GAAGnB,QAAQ,CAAC;MACRa,IAAI,EAAE;IADE,CAAD;EADL,CA/BC;EAoCXO,OAAO,EAAE,EACL,GAAGnB,UAAU,CAAC;MACXoB,qBAAqB,EAAE,uBADZ;MAEXC,iBAAiB,EAAE,mBAFR;MAGXC,iBAAiB,EAAE;IAHR,CAAD,CADR;;IAMLC,aAAa,CAACC,KAAD,EAAQ;MACjB,KAAKJ,qBAAL,CAA2BI,KAA3B;IACH,CARI;;IASLC,SAAS,CAACD,KAAD,EAAQ;MACb,KAAKH,iBAAL,CAAuBG,KAAvB;IACH,CAXI;;IAYLE,SAAS,CAACF,KAAD,EAAQ;MACb,KAAKF,iBAAL,CAAuBE,KAAvB;IACH,CAdI;;IAeL,MAAMG,MAAN,GAAe;MACX,IAAI,KAAKvB,IAAL,CAAUC,UAAV,IACA,KAAKD,IAAL,CAAUE,SADV,IAEA,KAAKF,IAAL,CAAUG,KAFV,IAGA,KAAKH,IAAL,CAAUI,OAHd,EAIE;QACEoB,KAAK,CAAC,SAAD,CAAL;QACA,MAAMC,KAAI,GAAI;UACVxB,UAAU,EAAE,KAAKD,IAAL,CAAUC,UADZ;UAEVC,SAAS,EAAE,KAAKF,IAAL,CAAUE,SAFX;UAGVC,KAAK,EAAE,KAAKH,IAAL,CAAUG,KAHP;UAIVC,OAAO,EAAE,KAAKJ,IAAL,CAAUI,OAJT;UAKVsB,QAAQ,EAAE,KAAKlB;QALL,CAAd;QAOA,MAAMX,KAAK,CAAC8B,IAAN,CAAW,kCAAX,EAA+CF,KAA/C,CAAN;QACA,KAAKzB,IAAL,CAAUC,UAAV,GAAuB,EAAvB;QACA,KAAKD,IAAL,CAAUE,SAAV,GAAsB,EAAtB;QACA,KAAKF,IAAL,CAAUG,KAAV,GAAkB,EAAlB;QACA,KAAKH,IAAL,CAAUI,OAAV,GAAoB,EAApB;QACA,KAAKJ,IAAL,CAAUK,aAAV,GAA0B,EAA1B;MACJ,CAnBA,MAoBK;QACDmB,KAAK,CAAC,OAAD,CAAL;MACJ;IACJ;;EAvCK;AApCE,CAAf","names":["mapState","mapActions","axios","name","data","form","first_name","last_name","phone","address","discount_code","labels","delete","cart","quantity","back_to_catalog","go_to_catalog","empty_cart","props","computed","methods","deleteProductFromCart","incrementQuantity","decrementQuantity","deleteProduct","index","increment","decrement","submit","alert","order","products","post"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CV/VUE-JS/online_shop/src/components/ShopCart.vue"],"sourcesContent":["<template>\n    <div class=\"content\">\n        <h1>{{ labels.cart }}</h1>\n        <div class=\"cart\">\n            <div class=\"container\">\n                <form>\n                    <div class=\"fields\">\n                        <span>\n                            <input\n                                :placeholder=\"`${labels.first_name}...`\"\n                                type=\"text\"\n                                v-model=\"form.first_name\"\n                            />\n                        </span>\n                        <span>\n                            <input\n                                :placeholder=\"`${labels.last_name}...`\"\n                                type=\"text\"\n                                v-model=\"form.last_name\"\n                            />\n                        </span>\n                        <span>\n                            <input\n                                :placeholder=\"`${labels.phone}...`\"\n                                type=\"text\"\n                                v-model=\"form.phone\"\n                            />\n                        </span>\n                        <span>\n                            <input\n                                :placeholder=\"`${labels.address}...`\"\n                                type=\"text\"\n                                v-model=\"form.address\"\n                            />\n                        </span>\n                        <span>\n                            <input\n                                :placeholder=\"`${labels.discount_code}...`\"\n                                type=\"text\"\n                                v-model=\"form.discount_code\"\n                            />\n                        </span>\n                    </div>\n                    <div class=\"submit\">\n                        <input\n                            class=\"submit\"\n                            value=\"Submit\"\n                            type=\"button\"\n                            @click=\"submit\"\n                        />\n                    </div>\n                    <!-- <div class=\"user-page\">\n                        <div class=\"submit\">\n                            <input\n                                class=\"submit\"\n                                value=\"Submit\"\n                                type=\"button\"\n                                @click=\"isPopupOpen = true\"\n                            />\n                        </div>\n                        <CustomAlert\n                            v-if=\"isPopupOpen\"\n                            title=\"Пользовательское соглашение\"\n                            @close=\"isPopupOpen = false\"\n                        >\n                            <p>Success</p>\n                        </CustomAlert>\n                    </div> -->\n                </form>\n            </div>\n            <div class=\"products\">\n                <div class=\"product\" v-for=\"(item, index) in cart\" :key=\"index\">\n                    <img :src=\"require('@/assets/images/' + item.image)\" alt=\"product\"/>\n                    <p>{{ item.name }}</p>\n                    <p>{{ item.price }}₴</p>\n                    <div style=\"display: flex\">\n                        <button\n                            class=\"quantity\"\n                            @click=\"decrement(index)\"\n                        >\n                            -\n                        </button>\n                        <p>{{ labels.quantity }}: {{ item.quantity }}</p>\n                        <button\n                            class=\"quantity\"\n                            @click=\"increment(index)\"\n                        >\n                            +\n                        </button>\n                    </div>\n                    <button\n                        class=\"button\"\n                        type=\"button\"\n                        @click=\"deleteProduct(index)\"\n                    >\n                        {{ labels.delete }}\n                    </button>\n                </div>\n                <div v-if=\"!this.cart.length\">\n                    {{ labels.empty_cart }}!\n                    <router-link :to=\"{name: 'catalog'}\">\n                        {{ labels.go_to_catalog }}\n                    </router-link>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n// import CustomAlert from '@/components/Custom/CustomAlert';\nimport { mapState, mapActions } from 'vuex';\nimport axios from 'axios';\n\nexport default {\n    name: 'ShopCart',\n    // components: {\n    //     CustomAlert,\n    // },\n    data() {\n        return {\n            // isPopupOpen: false,\n            form: {\n                first_name: '',\n                last_name: '',\n                phone: '',\n                address: '',\n                discount_code: '',\n            },\n            labels: {\n                delete: 'Delete',\n                cart: 'Cart',\n                quantity: 'Quantity',\n                back_to_catalog: 'Back to catalog',\n                go_to_catalog: 'Go to catalog',\n                empty_cart: 'Empty cart',\n                first_name: 'First Name',\n                last_name: 'Last Name',\n                phone: 'Phone',\n                address: 'Address',\n                discount_code: 'Discount code',\n            }\n        }\n    },\n    props: {},\n    computed: {\n        ...mapState({\n            cart: 'cart'\n        })\n    },\n    methods: {\n        ...mapActions({\n           deleteProductFromCart: 'deleteProductFromCart',\n           incrementQuantity: 'incrementQuantity',\n           decrementQuantity: 'decrementQuantity',\n        }),\n        deleteProduct(index) {\n            this.deleteProductFromCart(index);\n        },\n        increment(index) {\n            this.incrementQuantity(index);\n        },\n        decrement(index) {\n            this.decrementQuantity(index);\n        },\n        async submit() {\n            if (this.form.first_name &&\n                this.form.last_name &&\n                this.form.phone &&\n                this.form.address\n            ) {\n                alert('success');\n                const order = {\n                    first_name: this.form.first_name,\n                    last_name: this.form.last_name,\n                    phone: this.form.phone,\n                    address: this.form.address,\n                    products: this.cart\n                }\n                await axios.post('http://localhost:5000/api/orders', order);\n                this.form.first_name = '';\n                this.form.last_name = '';\n                this.form.phone = '';\n                this.form.address = '';\n                this.form.discount_code = '';\n            }\n            else {\n                alert('error')\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.submit {\n    padding-right: 40px;\n\n    &__button {\n        color: #ffffff;\n        background-color: #f9d9d9;\n        padding: 10px 20px;\n        border-radius: 20px;\n        text-decoration: none;\n    }\n}\n\n.content {\n    height: 100vh;\n    .cart {\n        display: flex;\n        justify-content: center;\n        gap: 100px;\n        padding-top: 80px;\n\n            /*fonts*/\n            // @import url(https://fonts.googleapis.com/css?family=PT+Sans:400,400italic);\n\n            // @import url(https://fonts.googleapis.com/css?family=Droid+Serif);\n\n            .container span:before {\n                counter-increment:section;\n                content:counter(section);\n                border:2px solid #4c2639;\n                width:40px;\n                height:40px;\n                color:#fff;\n                display:inline-block;\n                border-radius:50%;\n                line-height:1.6em;\n                font-size:1.5em;\n                position: absolute;\n                left: -60px;\n                top: 4px;\n                background:#2F1E27;\n            }\n\n            // .fields{\n            //     border-left:2px solid #4c2639;\n            // }\n\n            .container span{\n                display: block;\n                position: relative;\n                padding-top: 20px;\n                margin-bottom: 22px; \n            }\n\n            .container span:last-child{\n                margin-bottom: -11px;\n            }\n\n            input{\n            border:none;\n            outline:none;\n            display:inline-block;\n            height:34px;\n            vertical-align:middle;\n            position:relative;\n            bottom:14px;\n            right:9px;\n            border-radius:22px;\n            width:220px;\n            box-sizing:border-box;\n            padding:0 18px;\n            }\n\n            input[type=\"button\"]{ \n            background:rgba(197,62,126,.33) ! important;\n            color:#fff;\n            position:relative;\n            left:9px;\n            top:25px; \n            width:100px;\n            cursor:pointer;\n            }\n\n        .products {\n            overflow-y: scroll;\n            width: 60%;\n            height: 678px;\n            .product {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                background-color: #e9e9e9;\n                box-shadow: 8px 8px 22px #e9d7d7, -8px -8px 22px #cddbcd;\n                margin: 8px;\n                padding: 8px;\n\n                .quantity {\n                    padding: 4px;\n                    background-color: #2196F3;\n                    color: #ffffff;\n                    cursor: pointer;\n                    border-radius: 6px;\n                }\n\n                .button {\n                    padding: 10px;\n                    border-radius: 50px;\n                    background: #2196F3;\n                    color: white;\n                    font-weight: bold;\n                    cursor: pointer;\n                    border: none;\n                    transition: .3s ease;\n\n                    &:hover {\n                        opacity: .8;\n                    }\n                }\n\n                img {\n                    height: 200px;\n                }\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}