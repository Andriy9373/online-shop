{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-04350d06\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"custom-select\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"custom-select__options\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", {\n    class: \"custom-select__text\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.selectedCategory($data.changeSelected))\n  }, _toDisplayString($data.changeSelected), 1\n  /* TEXT */\n  ), $data.areOptionsVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.options, (item, index) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: index,\n      onClick: () => {\n        $data.changeSelected = item;\n        $data.areOptionsVisible = false;\n      }\n    }, _toDisplayString(item.name), 9\n    /* TEXT, PROPS */\n    , _hoisted_3);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" Selected is: \" + _toDisplayString($data.changeSelected), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;;EAQHA,KAAK,EAAC;;;;uBARdC,oBAoBM,KApBN,cAoBM,CAnBFC,oBAKI,GALJ,EAKI;IAJAF,KAAK,EAAC,qBAIN;IAHCG,OAAK,sCAAEC,0BAAiBC,oBAAjB,CAAF;EAGN,CALJ,mBAIOA,qBAJP,EAIqB;EAAA;EAJrB,CAmBE,EAXQA,yCAFVJ,oBAWM,KAXN,cAWM,oBAPFA,oBAMIK,SANJ,EAMI,IANJ,EAMIC,YALwBC,cAKxB,EAL+B,CAAvBC,IAAuB,EAAjBC,KAAiB,KAAZ;yBADvBT,oBAMI,GANJ,EAMI;MAJCU,GAAG,EAAED,KAIN;MAHCP,OAAK;QAASE,uBAAiBI,IAAjB;QAAuBJ,0BAAiB,KAAjB;MAAiB;IAGvD,CANJ,mBAKOI,IAAI,CAACG,KALZ,EAKgB;IAAA;IALhB,EAKgBC,UALhB;GAMI,CANJ;;EAAA,CAOE,EAXN,sCAaE,mBAFI,mBACOC,iBAAGT,oBAAH,GAAiB;EAAA;GAC5B,CApBN","names":["class","_createElementBlock","_createElementVNode","onClick","$options","$data","_Fragment","_renderList","$props","item","index","key","name","_hoisted_3","_toDisplayString"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/CustomSelect.vue"],"sourcesContent":["<template>\n    <div class=\"custom-select\">\n        <p\n            class=\"custom-select__text\"\n            @click=\"selectedCategory(changeSelected)\"\n        >\n            {{ changeSelected }}\n        </p>\n        <div\n            class=\"custom-select__options\"\n            v-if=\"areOptionsVisible\"\n        >\n            <p \n                v-for=\"(item, index) in options\"\n                :key=\"index\"\n                @click=\"() => {changeSelected = item; areOptionsVisible = false}\"\n            >\n                {{ item.name }}\n            </p>\n        </div>\n        Selected is: {{ changeSelected }}\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'CustomSelect',\n    props: {\n        options: {\n            type: Array,\n            default: () => []\n        },\n        selected: {\n            type: String,\n            default: ''\n        }\n    },\n    data() {\n        return {\n            areOptionsVisible: false,\n            changeSelected: this.selected\n        }\n    },\n    methods: {\n        selectedCategory(selected) {\n            this.areOptionsVisible = !this.areOptionsVisible;\n            this.$emit('selectedCategory', selected);\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    margin: 0;\n}\n.custom-select {\n    position: relative;\n    &__text {\n        cursor: pointer;\n        border: 1px solid #aeaeae;\n    }\n\n    &__options {\n        position: absolute;\n        top: 20px;\n        width: 100%;\n        cursor: pointer;\n        border: 1px solid #aeaeae;\n        background-color: #aeaeae;\n\n        p {\n            &:hover {\n                color: red;\n                background-color: #e7e7e7;\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}