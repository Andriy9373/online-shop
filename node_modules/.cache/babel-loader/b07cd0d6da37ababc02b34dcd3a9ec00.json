{"ast":null,"code":"import { setInterval } from 'timers/promises';\nexport default {\n  name: 'TimeClock',\n\n  data() {\n    return {\n      isMounted: false,\n      intervalPtr: {},\n      data: this.calculateDate()\n    };\n  },\n\n  methods: {\n    calculateDate() {\n      setInterval(() => {\n        const currentTime = new Date();\n        let hh = currentTime.getHours();\n        let mm = currentTime.getMinutes();\n        let ss = currentTime.getSeconds();\n        hh = hh < 10 ? `0${hh}` : hh;\n        mm = mm < 10 ? `0${mm}` : mm;\n        ss = ss < 10 ? `0${ss}` : ss;\n        return `${hh}:${mm}:${ss}`;\n      }, 1000);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAOA,SAASA,WAAT,QAA4B,iBAA5B;AAEA,eAAe;EACXC,IAAI,EAAE,WADK;;EAEXC,IAAI,GAAG;IACH,OAAO;MACHC,SAAS,EAAE,KADR;MAEHC,WAAW,EAAE,EAFV;MAGHF,IAAI,EAAE,KAAKG,aAAL;IAHH,CAAP;EAKH,CARU;;EASXC,OAAO,EAAE;IACLD,aAAa,GAAG;MACZL,WAAW,CAAC,MAAM;QACd,MAAMO,WAAU,GAAI,IAAIC,IAAJ,EAApB;QACA,IAAIC,EAAC,GAAIF,WAAW,CAACG,QAAZ,EAAT;QACA,IAAIC,EAAC,GAAIJ,WAAW,CAACK,UAAZ,EAAT;QACA,IAAIC,EAAC,GAAIN,WAAW,CAACO,UAAZ,EAAT;QACAL,EAAC,GAAIA,EAAC,GAAI,EAAL,GAAW,IAAGA,EAAG,EAAjB,GAAqBA,EAA1B;QACAE,EAAC,GAAIA,EAAC,GAAI,EAAL,GAAW,IAAGA,EAAG,EAAjB,GAAqBA,EAA1B;QACAE,EAAC,GAAIA,EAAC,GAAI,EAAL,GAAW,IAAGA,EAAG,EAAjB,GAAqBA,EAA1B;QACA,OAAQ,GAAEJ,EAAG,IAAGE,EAAG,IAAGE,EAAG,EAAzB;MACH,CATU,EASR,IATQ,CAAX;IAUH;;EAZI;AATE,CAAf","names":["setInterval","name","data","isMounted","intervalPtr","calculateDate","methods","currentTime","Date","hh","getHours","mm","getMinutes","ss","getSeconds"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/TimeClock.vue"],"sourcesContent":["<template>\n    <div>\n        <p ref=\"timer\">{{ calculateDate() }}</p>\n    </div>\n</template>\n\n<script>\nimport { setInterval } from 'timers/promises';\n\nexport default {\n    name: 'TimeClock',\n    data() {\n        return {\n            isMounted: false,\n            intervalPtr: {},\n            data: this.calculateDate()\n        }\n    },\n    methods: {\n        calculateDate() {\n            setInterval(() => {\n                const currentTime = new Date();\n                let hh = currentTime.getHours();\n                let mm = currentTime.getMinutes();\n                let ss = currentTime.getSeconds();\n                hh = hh < 10 ? `0${hh}` : hh;\n                mm = mm < 10 ? `0${mm}` : mm;\n                ss = ss < 10 ? `0${ss}` : ss;\n                return `${hh}:${mm}:${ss}`;\n            }, 1000)\n        },\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    position: fixed;\n    margin: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module"}