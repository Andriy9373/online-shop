{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", {\n    ref: \"timer\"\n  }, _toDisplayString($options.calculateTime), 513\n  /* TEXT, NEED_PATCH */\n  )]);\n}","map":{"version":3,"mappings":";;uBACIA,oBAEM,KAFN,EAEM,IAFN,EAEM,CADFC,oBAAsC,GAAtC,EAAsC;IAAnCC,GAAG,EAAC;EAA+B,CAAtC,EAAcC,iBAAIC,sBAAJ,CAAd,EAA+B;EAAA;EAA/B,CACE,CAFN","names":["_createElementBlock","_createElementVNode","ref","_toDisplayString","$options"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/TimeClock.vue"],"sourcesContent":["<template>\n    <div>\n        <p ref=\"timer\">{{ calculateTime }}</p>\n    </div>\n</template>\n\n<script>\nimport { setInterval } from 'timers/promises';\n\nexport default {\n    name: 'TimeClock',\n    data() {\n        return {\n\n        }\n    },\n    computed: {\n        calculateTime() {\n            const currentTime = new Date();\n            let hh = currentTime.getHours();\n            let mm = currentTime.getMinutes();\n            let ss = currentTime.getSeconds();\n            hh = hh < 10 ? `0${hh}` : hh;\n            mm = mm < 10 ? `0${mm}` : mm;\n            ss = ss < 10 ? `0${ss}` : ss;\n            // time.innerHTML = `${hh}:${mm}:${ss}`\n            return `${hh}:${mm}:${ss}`\n        },\n        calculateTime(location, format) {\n\t\t\tconst moment = require('moment-timezone');\n\t\t\tif (this.intervalPtr[location]) clearInterval(this.intervalPtr[location]);\n\t\t\tconst calcTime = () => {\n\t\t\t\tthis.$refs[location][0].innerText = moment.tz(location).format(format);\n\t\t\t}\n\t\t\tthis.intervalPtr[location] = setInterval(calcTime, 1000);\n\t\t\treturn moment.tz(location).format(format);\n\t\t},\n        dynamicDate() {\n            setInterval(() => {\n                this.calculateTime();\n            }, 1000)\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    position: fixed;\n    margin: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module"}