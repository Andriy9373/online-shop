{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6be7b2a8\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  \"aria-hidden\": \"true\"\n}, \"Ã—\", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = [_hoisted_1];\nconst _hoisted_3 = {\n  class: \"modal-body\",\n  ref: \"modalBody\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"h5\", null, _toDisplayString($props.title), 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"close\",\n    \"aria-label\": \"Close\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closePopup && $options.closePopup(...args))\n  }, _hoisted_2)]), _createElementVNode(\"div\", _hoisted_3, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)], 512\n  /* NEED_PATCH */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gEAWYA,oBAAuC,MAAvC,EAAuC;EAAjC,eAAY;AAAqB,CAAvC,EAAyB,GAAzB,EAAgC;AAAA;AAAhC;;oBAAAC;;EAIJC,KAAK,EAAC;EACNC,GAAG,EAAC;;;6DAfRH,oBAYM,KAZN,EAYM,IAZN,EAYM,CAXFA,oBAEK,IAFL,EAEK,IAFL,EAEKI,iBADEC,YACF,CAFL,EACY;EAAA;EADZ,CAWE,EARFL,oBAOS,QAPT,EAOS;IANLM,IAAI,EAAC,QAMA;IALLJ,KAAK,EAAC,OAKD;IAJL,cAAW,OAIN;IAHJK,OAAK,yCAAEC,mDAAF;EAGD,CAPT,aAQE,CAZN,GAaAR,oBAKM,KALN,cAKM,CADFS,YAAaC,WAAb,EAAa,SAAb,EAAa,EAAb,EAAaC,SAAb,EAAa,IAAb,CACE,CALN;;EAAA","names":["_createElementVNode","_hoisted_1","class","ref","_toDisplayString","$props","type","onClick","$options","_renderSlot","_ctx","undefined"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CV/VUE-JS/online_shop/src/components/Popup.vue"],"sourcesContent":["<template>\n    <div>\n        <h5>\n            {{ title }}\n        </h5>\n        <button\n            type=\"button\"\n            class=\"close\"\n            aria-label=\"Close\"\n            @click=\"closePopup\"\n        >\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div\n        class=\"modal-body\"\n        ref=\"modalBody\"\n    >\n        <slot></slot>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'PopupView',\n    props: {\n        title: {\n            type: String,\n            default: ''\n        }\n    },\n    data() {\n        return {\n            isRulesRead: false\n        }\n    },\n    beforeCreate() {\n        console.log('beforeCreate')\n    },\n    mounted() {\n        console.log('mounted')\n        document.querySelector('.modal-body').scrollTop = 280\n    },\n    methods: {\n        closePopup() {\n            this.$emit('close')\n        },\n        onBodyScroll() {\n            console.log('scrolled')\n            console.log(document.querySelector('.modal-body').scrollTop)\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    .modal-body {\n        position: fixed;\n        background-color: red;\n        color: #ffffff;\n        top: 80px;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}