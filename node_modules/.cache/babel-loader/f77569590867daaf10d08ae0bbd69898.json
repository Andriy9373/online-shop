{"ast":null,"code":"export default {\n  name: 'TimeClock',\n\n  data() {\n    return {\n      intervalPtr: {}\n    };\n  },\n\n  computed: {\n    // calculateTime() {\n    //     const currentTime = new Date();\n    //     let hh = currentTime.getHours();\n    //     let mm = currentTime.getMinutes();\n    //     let ss = currentTime.getSeconds();\n    //     hh = hh < 10 ? `0${hh}` : hh;\n    //     mm = mm < 10 ? `0${mm}` : mm;\n    //     ss = ss < 10 ? `0${ss}` : ss;\n    //     // time.innerHTML = `${hh}:${mm}:${ss}`\n    //     return `${hh}:${mm}:${ss}`\n    // },\n    calculateTime() {\n      const currentTime = new Date();\n      console.log(this.$refs.timer);\n      if (this.intervalPtr[location]) clearInterval(this.intervalPtr[location]);\n\n      const calcTime = () => {\n        console.log(this.$refs); //this.$refs[location][0].innerText = moment.tz(location).format(format);\n      };\n\n      this.intervalPtr[location] = setInterval(calcTime, 1000);\n      return moment.tz(location).format(format);\n    } // dynamicDate() {\n    //     setInterval(() => {\n    //         this.calculateTime();\n    //     }, 1000)\n    // }\n\n\n  },\n\n  mounted() {\n    console.log(this.$refs.timer);\n  }\n\n};","map":{"version":3,"mappings":"AAOA,eAAe;EACXA,IAAI,EAAE,WADK;;EAEXC,IAAI,GAAG;IACH,OAAO;MACHC,WAAW,EAAE;IADV,CAAP;EAGH,CANU;;EAOXC,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,aAAa,GAAG;MACrB,MAAMC,WAAU,GAAI,IAAIC,IAAJ,EAApB;MACSC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;MACT,IAAI,KAAKR,WAAL,CAAiBS,QAAjB,CAAJ,EAAgCC,aAAa,CAAC,KAAKV,WAAL,CAAiBS,QAAjB,CAAD,CAAb;;MAChC,MAAME,QAAO,GAAI,MAAM;QACVN,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EADU,CAEtB;MACD,CAHA;;MAIA,KAAKP,WAAL,CAAiBS,QAAjB,IAA6BG,WAAW,CAACD,QAAD,EAAW,IAAX,CAAxC;MACA,OAAOE,MAAM,CAACC,EAAP,CAAUL,QAAV,EAAoBM,MAApB,CAA2BA,MAA3B,CAAP;IACA,CAtBW,CAuBN;IACA;IACA;IACA;IACA;;;EA3BM,CAPC;;EAoCXC,OAAO,GAAG;IACNX,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;EACJ;;AAtCW,CAAf","names":["name","data","intervalPtr","computed","calculateTime","currentTime","Date","console","log","$refs","timer","location","clearInterval","calcTime","setInterval","moment","tz","format","mounted"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/TimeClock.vue"],"sourcesContent":["<template>\n    <div>\n        <p ref=\"timer\">{{ calculateTime }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'TimeClock',\n    data() {\n        return {\n            intervalPtr: {},\n        }\n    },\n    computed: {\n        // calculateTime() {\n        //     const currentTime = new Date();\n        //     let hh = currentTime.getHours();\n        //     let mm = currentTime.getMinutes();\n        //     let ss = currentTime.getSeconds();\n        //     hh = hh < 10 ? `0${hh}` : hh;\n        //     mm = mm < 10 ? `0${mm}` : mm;\n        //     ss = ss < 10 ? `0${ss}` : ss;\n        //     // time.innerHTML = `${hh}:${mm}:${ss}`\n        //     return `${hh}:${mm}:${ss}`\n        // },\n        calculateTime() {\n\t\t\tconst currentTime = new Date();\n            console.log(this.$refs.timer)\n\t\t\tif (this.intervalPtr[location]) clearInterval(this.intervalPtr[location]);\n\t\t\tconst calcTime = () => {\n                console.log(this.$refs)\n\t\t\t\t//this.$refs[location][0].innerText = moment.tz(location).format(format);\n\t\t\t}\n\t\t\tthis.intervalPtr[location] = setInterval(calcTime, 1000);\n\t\t\treturn moment.tz(location).format(format);\n\t\t},\n        // dynamicDate() {\n        //     setInterval(() => {\n        //         this.calculateTime();\n        //     }, 1000)\n        // }\n    },\n    mounted() {\n        console.log(this.$refs.timer)\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    position: fixed;\n    margin: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module"}