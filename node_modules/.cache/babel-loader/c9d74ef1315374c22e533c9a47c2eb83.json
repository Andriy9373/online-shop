{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a5e336a\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"custom-select\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"custom-select__options\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", {\n    class: \"custom-select__text\",\n    onClick: _cache[0] || (_cache[0] = $event => $data.areOptionsVisible = !$data.areOptionsVisible),\n    style: _normalizeStyle($options.widthStyle)\n  }, _toDisplayString($data.changeSelected), 5\n  /* TEXT, STYLE */\n  ), $data.areOptionsVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.options, (item, index) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: index,\n      onClick: $event => $options.selectedCategory(item.gender)\n    }, _toDisplayString(item.gender), 9\n    /* TEXT, PROPS */\n    , _hoisted_3);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;;EASHA,KAAK,EAAC;;;;uBATdC,oBAoBM,KApBN,cAoBM,CAnBFC,oBAMI,GANJ,EAMI;IALAF,KAAK,EAAC,qBAKN;IAJCG,OAAK,sCAAEC,0BAAiB,CAAIA,uBAAvB,CAIN;IAHCC,KAAK,kBAAEC,mBAAF;EAGN,CANJ,mBAKOF,qBALP,EAKqB;EAAA;EALrB,CAmBE,EAVQA,yCAFVH,oBAWM,KAXN,cAWM,oBAPFA,oBAMIM,SANJ,EAMI,IANJ,EAMIC,YALwBC,cAKxB,EAL+B,CAAvBC,IAAuB,EAAjBC,KAAiB,KAAZ;yBADvBV,oBAMI,GANJ,EAMI;MAJCW,GAAG,EAAED,KAIN;MAHCR,OAAK,YAAEG,0BAAiBI,IAAI,CAACG,MAAtB;IAGR,CANJ,mBAKOH,IAAI,CAACG,OALZ,EAKkB;IAAA;IALlB,EAKkBC,UALlB;GAMI,CANJ;;EAAA,CAOE,EAXN,sCAYE,CApBN","names":["class","_createElementBlock","_createElementVNode","onClick","$data","style","$options","_Fragment","_renderList","$props","item","index","key","gender","_hoisted_3"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CV/VUE-JS/online_shop/src/components/Custom/CustomSelect.vue"],"sourcesContent":["<template>\n    <div class=\"custom-select\">\n        <p\n            class=\"custom-select__text\"\n            @click=\"areOptionsVisible = !areOptionsVisible\"\n            :style=\"widthStyle\"\n        >\n            {{ changeSelected }}\n        </p>\n        <div\n            class=\"custom-select__options\"\n            v-if=\"areOptionsVisible\"\n        >\n            <p \n                v-for=\"(item, index) in options\"\n                :key=\"index\"\n                @click=\"selectedCategory(item.gender)\"\n            >\n                {{ item.gender }}\n            </p>\n        </div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'CustomSelect',\n    props: {\n        options: {\n            type: Array,\n            default: () => []\n        },\n        selected: {\n            type: String,\n            default: ''\n        },\n        width: {\n            type: String,\n            default: '100%'\n        }\n    },\n    data() {\n        return {\n            areOptionsVisible: false,\n            changeSelected: this.selected\n        }\n    },\n    computed: {\n        widthStyle() {\n            return {'--width': this.width};\n        }\n    },\n    methods: {\n        selectedCategory(gender) {\n            this.areOptionsVisible = !this.areOptionsVisible;\n            this.changeSelected = gender;\n            this.$emit('selectedCategory', gender);\n        },\n        hideOptions() {\n            this.areOptionsVisible = false;\n        }\n    },\n    mounted() {\n        window.addEventListener('resize', () => {\n            if (window.innerWidth < 703) {\n                this.areOptionsVisible = true;\n            } else this.areOptionsVisible = false;\n        })\n    }\n    // mounted() {\n    //     document.addEventListener('click', this.hideOptions.bind(this), true);\n    // },\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    margin: 0;\n}\n.custom-select {\n    position: relative;\n    width: var(--width);\n\n    &__text {\n        cursor: pointer;\n        border: 1px solid #aeaeae;\n    }\n\n    &__options {\n        position: absolute;\n        top: 20px;\n        width: 100%;\n        cursor: pointer;\n        border: 1px solid #aeaeae;\n        background-color: #aeaeae;\n\n        p {\n            &:hover {\n                color: red;\n                background-color: #e7e7e7;\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}