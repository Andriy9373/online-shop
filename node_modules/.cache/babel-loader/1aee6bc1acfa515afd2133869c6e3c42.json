{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-04350d06\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"custom-select\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"custom-select__options\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", {\n    class: \"custom-select__text\",\n    onClick: _cache[0] || (_cache[0] = $event => $data.areOptionsVisible = !$data.areOptionsVisible)\n  }, \" Select \"), $data.areOptionsVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.options, (item, index) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: index,\n      onClick: $event => $data.selected = item.index\n    }, _toDisplayString(item.name), 9\n    /* TEXT, PROPS */\n    , _hoisted_3);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" Selected is: \" + _toDisplayString($data.selected), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;;EAQHA,KAAK,EAAC;;;;uBARdC,oBAoBM,KApBN,cAoBM,CAnBFC,oBAKI,GALJ,EAKI;IAJAF,KAAK,EAAC,qBAIN;IAHCG,OAAK,sCAAEC,0BAAiB,CAAIA,uBAAvB;EAGN,CALJ,EAGC,UAHD,CAmBE,EAXQA,yCAFVH,oBAWM,KAXN,cAWM,oBAPFA,oBAMII,SANJ,EAMI,IANJ,EAMIC,YALwBF,aAKxB,EAL+B,CAAvBG,IAAuB,EAAjBC,KAAiB,KAAZ;yBADvBP,oBAMI,GANJ,EAMI;MAJCQ,GAAG,EAAED,KAIN;MAHCL,OAAK,YAAEC,iBAAWG,IAAI,CAACC;IAGxB,CANJ,mBAKOD,IAAI,CAACG,KALZ,EAKgB;IAAA;IALhB,EAKgBC,UALhB;GAMI,CANJ;;EAAA,CAOE,EAXN,sCAaE,mBAFI,mBACOC,iBAAGR,cAAH,GAAW;EAAA;GACtB,CApBN","names":["class","_createElementBlock","_createElementVNode","onClick","$data","_Fragment","_renderList","item","index","key","name","_hoisted_3","_toDisplayString"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/CustomSelect.vue"],"sourcesContent":["<template>\n    <div class=\"custom-select\">\n        <p\n            class=\"custom-select__text\"\n            @click=\"areOptionsVisible = !areOptionsVisible\"\n        >\n            Select\n        </p>\n        <div\n            class=\"custom-select__options\"\n            v-if=\"areOptionsVisible\"\n        >\n            <p \n                v-for=\"(item, index) in options\"\n                :key=\"index\"\n                @click=\"selected = item.index\"\n            >\n                {{ item.name }}\n            </p>\n        </div>\n        Selected is: {{ selected }}\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'CustomSelect',\n    components: {\n    },\n    data() {\n        return {\n            options: [\n                {name: 'Option 1', value: 1},\n                {name: 'Option 2', value: 2},\n                {name: 'Option 3', value: 3},\n                {name: 'Option 4', value: 4},\n            ],\n            areOptionsVisible: false,\n            selected: ''\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    margin: 0;\n}\n.custom-select {\n    &__text {\n        cursor: pointer;\n        border: 1px solid #aeaeae;\n    }\n\n    &__options {\n        border: 1px solid #aeaeae;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}