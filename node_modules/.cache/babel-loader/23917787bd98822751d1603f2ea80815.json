{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios'; // json-server --watch db.json => enter this command to run the API\n\nconst URL = \"http://localhost:3000/products\";\nexport default createStore({\n  state: {\n    products: [],\n    cart: []\n  },\n  mutations: {\n    setProducts(state, payload) {\n      state.products = payload;\n    },\n\n    setCart(state, payload) {\n      if (state.cart.length) {\n        let isProductExists = false;\n        state.cart.map(item => {\n          if (item.name === payload.name) {\n            isProductExists = true;\n            item.quantity += 1;\n            console.log(item);\n            console.log(item.quantity);\n          }\n        });\n        if (!isProductExists) state.cart.push(payload);\n      } else {\n        state.cart.push(payload);\n        console.log('PUSHED!!!');\n      } // console.log('state.cart', state.cart)\n      // console.log('payload', payload.quantity)\n      // state.cart.push(payload);\n      // console.log(state.cart)\n\n    },\n\n    deleteProduct(state, payload) {\n      state.cart.splice(payload, 1);\n    }\n\n  },\n  actions: {\n    async getProducts({\n      commit\n    }) {\n      try {\n        const products = await axios.get(URL);\n        commit('setProducts', products.data);\n      } catch {\n        console.error('Couldn\\'t connect to API!');\n      }\n    },\n\n    pushToCart({\n      commit\n    }, payload) {\n      commit('setCart', payload);\n    },\n\n    deleteProductFromCart({\n      commit\n    }, payload) {\n      commit('deleteProduct', payload);\n    }\n\n  },\n  getters: {}\n});","map":{"version":3,"names":["createStore","axios","URL","state","products","cart","mutations","setProducts","payload","setCart","length","isProductExists","map","item","name","quantity","console","log","push","deleteProduct","splice","actions","getProducts","commit","get","data","error","pushToCart","deleteProductFromCart","getters"],"sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from 'axios';\n\n// json-server --watch db.json => enter this command to run the API\nconst URL = \"http://localhost:3000/products\";\n\nexport default createStore({\nstate: {\n    products: [],\n    cart: [],\n},\nmutations: {\n    setProducts(state, payload) {\n        state.products = payload;\n    },\n    setCart(state, payload) {\n        if (state.cart.length) {\n            let isProductExists = false;\n            state.cart.map(item => {\n                if (item.name === payload.name) {\n                    isProductExists = true; \n                    item.quantity += 1;\n                    console.log(item);\n                    console.log(item.quantity);\n                }\n            })\n            if (!isProductExists) state.cart.push(payload);\n        } \n        else {\n            state.cart.push(payload);\n            console.log('PUSHED!!!');\n        }\n        // console.log('state.cart', state.cart)\n        // console.log('payload', payload.quantity)\n        // state.cart.push(payload);\n        // console.log(state.cart)\n    },\n    deleteProduct(state, payload) {\n        state.cart.splice(payload, 1);\n    }\n},\nactions: {\n    async getProducts({commit}) {\n        try {\n            const products = await axios.get(URL);\n            commit('setProducts', products.data);\n        }\n        catch {\n            console.error('Couldn\\'t connect to API!'); \n        }\n    },\n    pushToCart({commit}, payload) {\n        commit('setCart', payload);\n    },\n    deleteProductFromCart({commit}, payload) {\n        commit('deleteProduct', payload);\n    }\n},\ngetters: {\n\n}\n})"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,GAAG,GAAG,gCAAZ;AAEA,eAAeF,WAAW,CAAC;EAC3BG,KAAK,EAAE;IACHC,QAAQ,EAAE,EADP;IAEHC,IAAI,EAAE;EAFH,CADoB;EAK3BC,SAAS,EAAE;IACPC,WAAW,CAACJ,KAAD,EAAQK,OAAR,EAAiB;MACxBL,KAAK,CAACC,QAAN,GAAiBI,OAAjB;IACH,CAHM;;IAIPC,OAAO,CAACN,KAAD,EAAQK,OAAR,EAAiB;MACpB,IAAIL,KAAK,CAACE,IAAN,CAAWK,MAAf,EAAuB;QACnB,IAAIC,eAAe,GAAG,KAAtB;QACAR,KAAK,CAACE,IAAN,CAAWO,GAAX,CAAeC,IAAI,IAAI;UACnB,IAAIA,IAAI,CAACC,IAAL,KAAcN,OAAO,CAACM,IAA1B,EAAgC;YAC5BH,eAAe,GAAG,IAAlB;YACAE,IAAI,CAACE,QAAL,IAAiB,CAAjB;YACAC,OAAO,CAACC,GAAR,CAAYJ,IAAZ;YACAG,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,QAAjB;UACH;QACJ,CAPD;QAQA,IAAI,CAACJ,eAAL,EAAsBR,KAAK,CAACE,IAAN,CAAWa,IAAX,CAAgBV,OAAhB;MACzB,CAXD,MAYK;QACDL,KAAK,CAACE,IAAN,CAAWa,IAAX,CAAgBV,OAAhB;QACAQ,OAAO,CAACC,GAAR,CAAY,WAAZ;MACH,CAhBmB,CAiBpB;MACA;MACA;MACA;;IACH,CAzBM;;IA0BPE,aAAa,CAAChB,KAAD,EAAQK,OAAR,EAAiB;MAC1BL,KAAK,CAACE,IAAN,CAAWe,MAAX,CAAkBZ,OAAlB,EAA2B,CAA3B;IACH;;EA5BM,CALgB;EAmC3Ba,OAAO,EAAE;IACL,MAAMC,WAAN,CAAkB;MAACC;IAAD,CAAlB,EAA4B;MACxB,IAAI;QACA,MAAMnB,QAAQ,GAAG,MAAMH,KAAK,CAACuB,GAAN,CAAUtB,GAAV,CAAvB;QACAqB,MAAM,CAAC,aAAD,EAAgBnB,QAAQ,CAACqB,IAAzB,CAAN;MACH,CAHD,CAIA,MAAM;QACFT,OAAO,CAACU,KAAR,CAAc,2BAAd;MACH;IACJ,CATI;;IAULC,UAAU,CAAC;MAACJ;IAAD,CAAD,EAAWf,OAAX,EAAoB;MAC1Be,MAAM,CAAC,SAAD,EAAYf,OAAZ,CAAN;IACH,CAZI;;IAaLoB,qBAAqB,CAAC;MAACL;IAAD,CAAD,EAAWf,OAAX,EAAoB;MACrCe,MAAM,CAAC,eAAD,EAAkBf,OAAlB,CAAN;IACH;;EAfI,CAnCkB;EAoD3BqB,OAAO,EAAE;AApDkB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}