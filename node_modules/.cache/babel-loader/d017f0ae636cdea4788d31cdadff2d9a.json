{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios'; // json-server --watch db.json => enter this command to run the API\n\nconst URL = \"http://localhost:3000/products\";\nexport default createStore({\n  state: {\n    products: [],\n    cart: []\n  },\n  mutations: {\n    setProducts(state, payload) {\n      state.products = payload;\n    },\n\n    setCart(state, payload) {\n      console.log('state.cart', state.cart);\n      console.log('payload', payload); //state.cart.push(payload);\n    },\n\n    deleteProduct(state, payload) {\n      state.cart.splice(payload, 1);\n    }\n\n  },\n  actions: {\n    async getProducts({\n      commit\n    }) {\n      try {\n        const products = await axios.get(URL);\n        commit('setProducts', products.data);\n      } catch {\n        console.error('Couldn\\'t connect to API!');\n      }\n    },\n\n    pushToCart({\n      commit\n    }, payload) {\n      commit('setCart', payload);\n    },\n\n    deleteProductFromCart({\n      commit\n    }, payload) {\n      commit('deleteProduct', payload);\n    }\n\n  },\n  getters: {}\n});","map":{"version":3,"names":["createStore","axios","URL","state","products","cart","mutations","setProducts","payload","setCart","console","log","deleteProduct","splice","actions","getProducts","commit","get","data","error","pushToCart","deleteProductFromCart","getters"],"sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from 'axios';\n\n// json-server --watch db.json => enter this command to run the API\nconst URL = \"http://localhost:3000/products\";\n\nexport default createStore({\nstate: {\n    products: [],\n    cart: [],\n},\nmutations: {\n    setProducts(state, payload) {\n        state.products = payload;\n    },\n    setCart(state, payload) {\n        console.log('state.cart', state.cart)\n        console.log('payload', payload)\n        //state.cart.push(payload);\n    },\n    deleteProduct(state, payload) {\n        state.cart.splice(payload, 1);\n    }\n},\nactions: {\n    async getProducts({commit}) {\n        try {\n            const products = await axios.get(URL);\n            commit('setProducts', products.data);\n        }\n        catch {\n            console.error('Couldn\\'t connect to API!'); \n        }\n    },\n    pushToCart({commit}, payload) {\n        commit('setCart', payload);\n    },\n    deleteProductFromCart({commit}, payload) {\n        commit('deleteProduct', payload);\n    }\n},\ngetters: {\n\n}\n})"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,GAAG,GAAG,gCAAZ;AAEA,eAAeF,WAAW,CAAC;EAC3BG,KAAK,EAAE;IACHC,QAAQ,EAAE,EADP;IAEHC,IAAI,EAAE;EAFH,CADoB;EAK3BC,SAAS,EAAE;IACPC,WAAW,CAACJ,KAAD,EAAQK,OAAR,EAAiB;MACxBL,KAAK,CAACC,QAAN,GAAiBI,OAAjB;IACH,CAHM;;IAIPC,OAAO,CAACN,KAAD,EAAQK,OAAR,EAAiB;MACpBE,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BR,KAAK,CAACE,IAAhC;MACAK,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,OAAvB,EAFoB,CAGpB;IACH,CARM;;IASPI,aAAa,CAACT,KAAD,EAAQK,OAAR,EAAiB;MAC1BL,KAAK,CAACE,IAAN,CAAWQ,MAAX,CAAkBL,OAAlB,EAA2B,CAA3B;IACH;;EAXM,CALgB;EAkB3BM,OAAO,EAAE;IACL,MAAMC,WAAN,CAAkB;MAACC;IAAD,CAAlB,EAA4B;MACxB,IAAI;QACA,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CAACgB,GAAN,CAAUf,GAAV,CAAvB;QACAc,MAAM,CAAC,aAAD,EAAgBZ,QAAQ,CAACc,IAAzB,CAAN;MACH,CAHD,CAIA,MAAM;QACFR,OAAO,CAACS,KAAR,CAAc,2BAAd;MACH;IACJ,CATI;;IAULC,UAAU,CAAC;MAACJ;IAAD,CAAD,EAAWR,OAAX,EAAoB;MAC1BQ,MAAM,CAAC,SAAD,EAAYR,OAAZ,CAAN;IACH,CAZI;;IAaLa,qBAAqB,CAAC;MAACL;IAAD,CAAD,EAAWR,OAAX,EAAoB;MACrCQ,MAAM,CAAC,eAAD,EAAkBR,OAAlB,CAAN;IACH;;EAfI,CAlBkB;EAmC3Bc,OAAO,EAAE;AAnCkB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}