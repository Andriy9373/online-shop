{"ast":null,"code":"export default {\n  name: 'CustomSelect',\n  props: {\n    options: {\n      type: Array,\n      default: () => []\n    },\n    selected: {\n      type: String,\n      default: ''\n    },\n    width: {\n      type: String,\n      default: '100%'\n    }\n  },\n\n  data() {\n    return {\n      areOptionsVisible: false,\n      changeSelected: this.selected\n    };\n  },\n\n  computed: {\n    widthStyle() {\n      return {\n        '--width': this.width\n      };\n    }\n\n  },\n  methods: {\n    selectedCategory(gender) {\n      this.areOptionsVisible = !this.areOptionsVisible;\n      this.changeSelected = gender;\n      this.$emit('selectedCategory', gender);\n    },\n\n    hideOptions() {\n      this.areOptionsVisible = false;\n    }\n\n  },\n\n  mounted() {\n    window.addEventListener('resize', () => {\n      if (window.innerWidth < 703) {\n        this.areOptionsVisible = true;\n      } else this.areOptionsVisible = false;\n    });\n  } // mounted() {\n  //     document.addEventListener('click', this.hideOptions.bind(this), true);\n  // },\n\n\n};","map":{"version":3,"mappings":"AAyBA,eAAe;EACXA,IAAI,EAAE,cADK;EAEXC,KAAK,EAAE;IACHC,OAAO,EAAE;MACLC,IAAI,EAAEC,KADD;MAELC,OAAO,EAAE,MAAM;IAFV,CADN;IAKHC,QAAQ,EAAE;MACNH,IAAI,EAAEI,MADA;MAENF,OAAO,EAAE;IAFH,CALP;IASHG,KAAK,EAAE;MACHL,IAAI,EAAEI,MADH;MAEHF,OAAO,EAAE;IAFN;EATJ,CAFI;;EAgBXI,IAAI,GAAG;IACH,OAAO;MACHC,iBAAiB,EAAE,KADhB;MAEHC,cAAc,EAAE,KAAKL;IAFlB,CAAP;EAIH,CArBU;;EAsBXM,QAAQ,EAAE;IACNC,UAAU,GAAG;MACT,OAAO;QAAC,WAAW,KAAKL;MAAjB,CAAP;IACJ;;EAHM,CAtBC;EA2BXM,OAAO,EAAE;IACLC,gBAAgB,CAACC,MAAD,EAAS;MACrB,KAAKN,iBAAL,GAAyB,CAAC,KAAKA,iBAA/B;MACA,KAAKC,cAAL,GAAsBK,MAAtB;MACA,KAAKC,KAAL,CAAW,kBAAX,EAA+BD,MAA/B;IACH,CALI;;IAMLE,WAAW,GAAG;MACV,KAAKR,iBAAL,GAAyB,KAAzB;IACJ;;EARK,CA3BE;;EAqCXS,OAAO,GAAG;IACNC,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;MACpC,IAAID,MAAM,CAACE,UAAP,GAAoB,GAAxB,EAA6B;QACzB,KAAKZ,iBAAL,GAAyB,IAAzB;MACJ,CAFA,MAEO,KAAKA,iBAAL,GAAyB,KAAzB;IACV,CAJD;EAKJ,CA3CW,CA4CX;EACA;EACA;;;AA9CW,CAAf","names":["name","props","options","type","Array","default","selected","String","width","data","areOptionsVisible","changeSelected","computed","widthStyle","methods","selectedCategory","gender","$emit","hideOptions","mounted","window","addEventListener","innerWidth"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CV/VUE-JS/online_shop/src/components/Custom/CustomSelect.vue"],"sourcesContent":["<template>\n    <div class=\"custom-select\" :style=\"widthStyle\">\n        <p\n            class=\"custom-select__text\"\n            @click=\"areOptionsVisible = !areOptionsVisible\"\n        >\n            {{ changeSelected }}\n        </p>\n        <div\n            class=\"custom-select__options\"\n            v-if=\"areOptionsVisible\"\n        >\n            <p \n                v-for=\"(item, index) in options\"\n                :key=\"index\"\n                @click=\"selectedCategory(item.gender)\"\n            >\n                {{ item.gender }}\n            </p>\n        </div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'CustomSelect',\n    props: {\n        options: {\n            type: Array,\n            default: () => []\n        },\n        selected: {\n            type: String,\n            default: ''\n        },\n        width: {\n            type: String,\n            default: '100%'\n        }\n    },\n    data() {\n        return {\n            areOptionsVisible: false,\n            changeSelected: this.selected\n        }\n    },\n    computed: {\n        widthStyle() {\n            return {'--width': this.width};\n        }\n    },\n    methods: {\n        selectedCategory(gender) {\n            this.areOptionsVisible = !this.areOptionsVisible;\n            this.changeSelected = gender;\n            this.$emit('selectedCategory', gender);\n        },\n        hideOptions() {\n            this.areOptionsVisible = false;\n        }\n    },\n    mounted() {\n        window.addEventListener('resize', () => {\n            if (window.innerWidth < 703) {\n                this.areOptionsVisible = true;\n            } else this.areOptionsVisible = false;\n        })\n    }\n    // mounted() {\n    //     document.addEventListener('click', this.hideOptions.bind(this), true);\n    // },\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    margin: 0;\n}\n.custom-select {\n    position: relative;\n    width: var(--width);\n\n    &__text {\n        cursor: pointer;\n        border: 1px solid #aeaeae;\n            border-radius: 4px;\n    }\n\n    &__options {\n        position: absolute;\n        top: 20px;\n        width: 100%;\n        cursor: pointer;\n        border: 1px solid #aeaeae;\n        background-color: #f9d9d9;\n\n        p {\n            &:hover {\n                color: red;\n                background-color: #e7e7e7;\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}