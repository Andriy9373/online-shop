{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-04350d06\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"custom-select\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", {\n    class: \"custom-select__text\",\n    onClick: _cache[0] || (_cache[0] = $event => $data.areOptionsVisible = !$data.areOptionsVisible)\n  }, _toDisplayString($data.selected.name), 1\n  /* TEXT */\n  ), $data.areOptionsVisible ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"custom-select__options\",\n    onBlur: _cache[1] || (_cache[1] = $event => $data.areOptionsVisible = false)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.options, (item, index) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: index,\n      onClick: () => {\n        $data.selected = item;\n        $data.areOptionsVisible = false;\n      }\n    }, _toDisplayString(item.name), 9\n    /* TEXT, PROPS */\n    , _hoisted_2);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 32\n  /* HYDRATE_EVENTS */\n  )) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" Selected is: \" + _toDisplayString($data.selected), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;;uBAAXC,oBAqBM,KArBN,cAqBM,CApBFC,oBAKI,GALJ,EAKI;IAJAF,KAAK,EAAC,qBAIN;IAHCG,OAAK,sCAAEC,0BAAiB,CAAIA,uBAAvB;EAGN,CALJ,mBAIOA,eAASC,KAJhB,EAIoB;EAAA;EAJpB,CAoBE,EAZQD,yCAFVH,oBAYM,KAZN,EAYM;UAAA;IAXFD,KAAK,EAAC,wBAWJ;IATDM,MAAI,sCAAEF,0BAAiB,KAAnB;EASH,CAZN,sBAKIH,oBAMIM,SANJ,EAMI,IANJ,EAMIC,YALwBJ,aAKxB,EAL+B,CAAvBK,IAAuB,EAAjBC,KAAiB,KAAZ;yBADvBT,oBAMI,GANJ,EAMI;MAJCU,GAAG,EAAED,KAIN;MAHCP,OAAK;QAASC,iBAAWK,IAAX;QAAiBL,0BAAiB,KAAjB;MAAiB;IAGjD,CANJ,mBAKOK,IAAI,CAACJ,KALZ,EAKgB;IAAA;IALhB,EAKgBO,UALhB;GAMI,CANJ;;EAAA,GALJ;;EAAA,sCAcE,mBAFI,mBACOC,iBAAGT,cAAH,GAAW;EAAA;GACtB,CArBN","names":["class","_createElementBlock","_createElementVNode","onClick","$data","name","onBlur","_Fragment","_renderList","item","index","key","_hoisted_2","_toDisplayString"],"sourceRoot":"","sources":["/home/andrii/Hirniak_Andrii/Projects for CD/VUE-JS/online_shop/src/components/CustomSelect.vue"],"sourcesContent":["<template>\n    <div class=\"custom-select\">\n        <p\n            class=\"custom-select__text\"\n            @click=\"areOptionsVisible = !areOptionsVisible\"\n        >\n            {{ selected.name }}\n        </p>\n        <div\n            class=\"custom-select__options\"\n            v-if=\"areOptionsVisible\"\n            @blur=\"areOptionsVisible = false\"\n        >\n            <p \n                v-for=\"(item, index) in options\"\n                :key=\"index\"\n                @click=\"() => {selected = item; areOptionsVisible = false}\"\n            >\n                {{ item.name }}\n            </p>\n        </div>\n        Selected is: {{ selected }}\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'CustomSelect',\n    components: {\n    },\n    data() {\n        return {\n            options: [\n                {name: 'Option 1', value: 1},\n                {name: 'Option 2', value: 2},\n                {name: 'Option 3', value: 3},\n                {name: 'Option 4', value: 4},\n            ],\n            areOptionsVisible: false,\n            selected: ''\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\np {\n    margin: 0;\n}\n.custom-select {\n    position: relative;\n    &__text {\n        cursor: pointer;\n        border: 1px solid #aeaeae;\n    }\n\n    &__options {\n        position: absolute;\n        top: 20px;\n        width: 100%;\n        cursor: pointer;\n        border: 1px solid #aeaeae;\n        background-color: #aeaeae;\n\n        p {\n            &:hover {\n                color: red;\n                background-color: #e7e7e7;\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}